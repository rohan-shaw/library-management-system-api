"""second migration

Revision ID: 07cc5bc6674c
Revises: 7e1d882fdc13
Create Date: 2025-01-29 01:50:04.914417

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '07cc5bc6674c'
down_revision: Union[str, None] = '7e1d882fdc13'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_borrowed_books_id', table_name='borrowed_books')
    op.drop_table('borrowed_books')
    op.drop_index('ix_books_id', table_name='books')
    op.drop_index('ix_books_title', table_name='books')
    op.drop_table('books')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_admin', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=True)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.create_table('books',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('books_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('author', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('published_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('isbn', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('available_copies', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_copies', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='books_pkey'),
    sa.UniqueConstraint('isbn', name='books_isbn_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_books_title', 'books', ['title'], unique=False)
    op.create_index('ix_books_id', 'books', ['id'], unique=False)
    op.create_table('borrowed_books',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('book_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('borrow_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('return_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], name='borrowed_books_book_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='borrowed_books_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='borrowed_books_pkey')
    )
    op.create_index('ix_borrowed_books_id', 'borrowed_books', ['id'], unique=False)
    # ### end Alembic commands ###
